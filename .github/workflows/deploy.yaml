name: Deploy Static Site to DigitalOcean Droplet

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Node setup + build
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      # 3) Start ssh-agent and load your key (no files/CRLF headaches)
      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 4) Trust the droplet host key
      - name: Add host key
        run: |
          PORT="${{ secrets.SSH_PORT || 22 }}"
          ssh-keyscan -p "$PORT" -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      # 5) Ensure rsync exists on the droplet (once it's there, this is a no-op)
      - name: Ensure rsync on droplet
        run: |
          PORT="${{ secrets.SSH_PORT || 22 }}"
          ssh -p "$PORT" root@${{ secrets.SSH_HOST }} 'command -v rsync >/dev/null 2>&1 || (apt-get update && apt-get install -y rsync)'

      # 6) Deploy built files to /var/www (static hosting)
      - name: Deploy via rsync
        run: |
          PORT="${{ secrets.SSH_PORT || 22 }}"
          ssh -p "$PORT" root@${{ secrets.SSH_HOST }} 'mkdir -p /var/www/'
          rsync -az --delete -e "ssh -p $PORT" dist/ root@${{ secrets.SSH_HOST }}:/var/www/

      # 7) Test config and reload Nginx
      - name: Reload Nginx
        run: |
          PORT="${{ secrets.SSH_PORT || 22 }}"
          ssh -p "$PORT" root@${{ secrets.SSH_HOST }} "sudo nginx -t && sudo systemctl reload nginx"
